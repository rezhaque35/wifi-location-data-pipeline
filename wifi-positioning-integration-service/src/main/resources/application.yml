spring:
  application:
    name: wifi-positioning-integration-service 
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:non-local}

server:
  servlet:
    context-path: /wifi-positioning-integration-service
  port: 8080

# Default configuration (local)
aws:
  dynamodb:
    endpoint: http://localhost:8000
    region: us-east-1
    table-name: wifi_access_points

# Default logging configuration
logging:
  level:
    root: INFO
    com.wifi.positioning: DEBUG
    org.springframework: INFO

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /
  endpoint:
    health:
      # Show health details to everyone for easier monitoring and debugging
      show-details: always
      # Show health components for better debugging
      show-components: always
      # Configure health groups for Kubernetes probes
      group:
        # Liveness probe - checks if the service is alive and should be restarted if failing
        liveness:
          include: serviceLiveness
        # Readiness probe - checks if the service is ready to handle requests
        readiness:
          include: dynamoDBReadiness
  # Health indicator configuration
  health:
    # Enable liveness and readiness state indicators
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
