spring:
  application:
    name: wifi-positioning-integration-service 
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:non-local}

server:
  servlet:
    context-path: /wifi-positioning-integration-service
  port: 8083

# Default configuration (local)

# Default logging configuration
logging:
  level:
    root: INFO
    com.wifi.positioning: DEBUG
    org.springframework: INFO

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,async-processing
      base-path: /
  endpoint:
    health:
      # Show health details to everyone for easier monitoring and debugging
      show-details: always
      # Show health components for better debugging
      show-components: always
      # Disable health group validation to prevent serviceLiveness errors
      validate-group-membership: false
      # Configure health groups for Kubernetes probes
      group:
        # Liveness probe - checks if the service is alive and should be restarted if failing
        liveness:
          include: wifiPositioningService
        # Readiness probe - checks if the service is ready to handle requests  
        readiness:
          include: wifiPositioningService
  # Health indicator configuration
  health:
    # Enable liveness and readiness state indicators
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method

# Integration Service Configuration
integration:
  positioning:
    base-url: http://localhost:8080/wifi-positioning-service
    path: /api/positioning/calculate
    health-path: /health
    connect-timeout-ms: 1000
    read-timeout-ms: 5000
    max-buffer-size-bytes: 1048576  # 1MB buffer for large responses
  processing:
    default-mode: sync # or async
    async:
      enabled: true
      queue-capacity: 1000
      workers: 4
  mapping:
    drop-missing-frequency: true
    default-frequency-mhz: 2412
  logging:
    include-payloads: false

# Health Check Configuration
health:
  indicator:
    # Cache TTL for health checks to avoid excessive calls to positioning service
    cache-ttl-seconds: 30
    # Enable caching for health checks
    enable-caching: true
  async-processing:
    # Thresholds for health status determination
    queue-utilization:
      warning-threshold: 80  # Percentage when status becomes DEGRADED
      critical-threshold: 95 # Percentage when status becomes CRITICAL
    thread-utilization:
      warning-threshold: 85  # Percentage when status becomes DEGRADED
      critical-threshold: 95 # Percentage when status becomes CRITICAL
