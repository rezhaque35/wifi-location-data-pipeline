spring:
  application:
    name: wifi-measurements-transformer-service
  
  # Jackson JSON Processing Configuration
  # Controls how JSON serialization/deserialization works throughout the application
  # Used by ObjectMapper for SQS message parsing, WiFi data processing, and Firehose output
  jackson:
    # Exclude null fields from JSON output to reduce payload size
    # Important for Firehose efficiency and S3 storage optimization
    default-property-inclusion: non_null
    
    # JSON Serialization Settings (Java objects → JSON)
    serialization:
      # Use ISO-8601 format instead of timestamps for better readability and debugging
      # Example: "2024-01-15T10:30:00Z" instead of 1705312200000
      write-dates-as-timestamps: false
      # Allow serialization of empty objects without throwing exceptions
      # Prevents errors when processing incomplete WiFi scan data
      fail-on-empty-beans: false
    
    # JSON Deserialization Settings (JSON → Java objects)
    deserialization:
      # Ignore unknown JSON properties during parsing
      # Makes the service robust when processing varied WiFi scan data formats
      # Prevents parsing failures due to schema evolution or vendor-specific fields
      fail-on-unknown-properties: false
  
  task:
    execution:
      pool:
        core-size: 10
        max-size: 10
        queue-capacity: 100
        keep-alive: 60s

# Server Configuration
server:
  port: 8081
  shutdown: graceful
  
# Management and Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,loggers
      base-path: /
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      group:
        readiness:
          include: sqsConnectivity,firehoseConnectivity
          show-details: always
        liveness:
          include: sqsActivityReporting,firehoseActivityReporting,memoryUsageReporting
          show-details: always
    metrics:
      enabled: true

  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
    sqs-message-processing:
      message-timeout-threshold: 5  # 5 minutes - reports IDLE_TIMEOUT status for monitoring
      processing-rate-threshold: 0.1  # Minimum processing rate threshold for monitoring (messages per minute)
    firehose-delivery:
      delivery-timeout-threshold: 10  # 10 minutes - reports IDLE_TIMEOUT status for monitoring
      delivery-rate-threshold: 0.05  # Minimum delivery rate threshold for monitoring (batches per minute)

# Enhanced Health Indicator Configuration
health:
  indicator:
    # General health indicator settings
    timeout-seconds: 5
    memory-threshold-percentage: 90
    retry-attempts: 3
    enable-caching: true
    cache-ttl-seconds: 30


# Logging Configuration
logging:
  level:
    root: INFO
    com.wifi.measurements.transformer: DEBUG
    software.amazon.awssdk: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"

# LocalStack AWS Configuration
aws:
  region: us-east-1
  endpoint-url: http://localhost:4566
  credentials:
    access-key: test
    secret-key: test
  s3:
    use-path-style: true
    skip-credentials-validation: true
    skip-metadata-api-check: true
    skip-requesting-account-id: true

# SQS Configuration
sqs:
  # Direct queue URL (for LocalStack development)
  queue-url: http://localhost:4566/000000000000/wifi-scan-events
  # Queue name (for AWS production - when queue-url is not provided)
  queue-name: wifi-scan-events
  max-messages: 10
  wait-time-seconds: 20
  visibility-timeout-seconds: 300
  max-concurrent-batches: 5
  max-retries: 3

# S3 Configuration
s3:
  region: us-east-1
  bucket-name: ingested-wifiscan-data
  max-file-size: 157286400
  connection-timeout-seconds: 30
  read-timeout-seconds: 60

# Data Filtering Configuration
filtering:
  max-location-accuracy: 150.0
  min-rssi: -100
  max-rssi: 0
  connected-quality-weight: 2.0
  scan-quality-weight: 1.0
  low-link-speed-quality-weight: 1.5
  mobile-hotspot:
    enabled: false
    action: LOG_ONLY
    oui-blacklist:
      - "00:23:6C"  # Apple
      - "3C:15:C2"  # Apple
      - "58:55:CA"  # Apple
      - "40:B0:FA"  # Samsung
      - "E8:50:8B"  # Samsung
      - "DA:A1:19"  # Google
      - "F8:A9:D0"  # Google

# Kinesis Data Firehose Configuration
firehose:
  enabled: ${FIREHOSE_ENABLED:true}
  delivery-stream-name: ${FIREHOSE_DELIVERY_STREAM_NAME:wifi-measurements-stream}
  max-batch-size: 500  # Maximum records per batch
  max-batch-size-bytes: 4194304  # 4 MB maximum batch size
  batch-timeout-ms: 5000  # Maximum time to wait for batch completion
  max-record-size-bytes: 1024000  # 1000 KB maximum record size
  max-retries: 3
  retry-backoff-ms: 1000

# Data API Configuration
data-api:
  enabled: false
  batch-size: 1000
  max-retries: 3

# Processing Configuration
processing:
  thread-pool-size: 10
  batch-write-size: 1000
  max-memory-threshold: 3221225472
  deduplication-window-seconds: 5
  enable-data-sanitization: true
  max-retry-attempts: 3
  retry-base-delay-millis: 1000 